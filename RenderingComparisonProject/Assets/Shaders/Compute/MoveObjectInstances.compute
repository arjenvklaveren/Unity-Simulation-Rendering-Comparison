#pragma kernel CSMain

struct Particle
{
    float4 position;
};

RWStructuredBuffer<Particle> particleBuffer;
float targetHeight;

float time;
float deltaTime;

void rotate2D(inout float2 v, float r)
{
    float s, c;
    sincos(r, s, c);
    v = float2(v.x * c - v.y * s, v.x * s + v.y * c);
}

[numthreads(64, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    Particle particle = particleBuffer[id.x];
    float4 particlePos = particle.position;
    float dist = length(particlePos.xz);    

    float rotationSpeed = (deltaTime * (105.0f - dist)) * 0.01f;
    rotate2D(particlePos.xz, rotationSpeed);
    particlePos.y = sin(dist * 0.1f + (time * 1.75f)) * targetHeight + ((100 - dist) * 0.1f);

    particle.position = particlePos;
    particleBuffer[id.x] = particle;
}